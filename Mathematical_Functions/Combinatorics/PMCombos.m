function val=PMCombos(x,zp)
%%PMCOMBOS  Given an NX1 vector x, create the set of all 2^N vectors that
%           are generated by varying the sign of each of the elements in x.
%           These points form the vertices of a regular N-cube (a measure
%           polytope). If the vector x contains zero elements, care is
%           taken to make sure that duplicate results are not produced (as
%           +0=-0. Optionally, the results can be padded with a desired
%           number of zeros. If there are zero elements, then the total
%           number of combinations is 2^(n-numZero).
%
%INPUTS:  x An NX1 or 1XN vector.
%        zp An optional parameter specifying the number of zeros to pad to
%           the end of the combinations. If this parameter is omitted, then
%           a value of zero is used (no zero padding).
%
%OUTPUTS: val The (N+zp)X2^N matrix of copies of the x where the sign of
%             the elements is varied and the vectors have been padded with
%             zp zeros.
%
%This algorithm is used in methods for generating cubature points described
%in [1], among other sources.
%
%REFERENCES:
%[1] David F. Crouse , "Basic tracking using nonlinear 3D monostatic and
%    bistatic measurements," IEEE Aerospace and Electronic Systems 
%    Magazine, vol. 29, no. 8, Part II, pp. 4-53, Aug. 2014.
%
%July 2012 David F. Crouse, Naval Research Laboratory, Washington D.C.
%(UNCLASSIFIED) DISTRIBUTION STATEMENT A. Approved for public release.

if(nargin<2||isempty(zp))
    zp=0;
end

x=x(:);

n=length(x);

%The values that can be changed.
sel=[(x~=0);false(zp,1)];
nVariable=sum(sel);
numPerm=2^nVariable;

val=zeros(n+zp,numPerm);

%Deal with the case of a single possible permutation. this should be
%the all zero case, so val can be returned just as zeros.
if(numPerm==1)
    return; 
end

curMult=ones(nVariable,1)*(-1);    
curPerm=1;

val(sel,curPerm)=x(sel).*curMult;

for curItem=2:numPerm
    %Increment the permutation number.
    idx=1;
    while(curMult(idx)==1)
        curMult(idx:-1:1)=-1;
        idx=idx+1;
    end
    curMult(idx)=1;

    val(sel,curItem)=x(sel).*curMult;
end
end

%LICENSE:
%
%The source code is in the public domain and not licensed or under
%copyright. The information and software may be used freely by the public.
%As required by 17 U.S.C. 403, third parties producing copyrighted works
%consisting predominantly of the material produced by U.S. government
%agencies must provide notice with such work(s) identifying the U.S.
%Government material incorporated and stating that such material is not
%subject to copyright protection.
%
%Derived works shall not identify themselves in a manner that implies an
%endorsement by or an affiliation with the Naval Research Laboratory.
%
%RECIPIENT BEARS ALL RISK RELATING TO QUALITY AND PERFORMANCE OF THE
%SOFTWARE AND ANY RELATED MATERIALS, AND AGREES TO INDEMNIFY THE NAVAL
%RESEARCH LABORATORY FOR ALL THIRD-PARTY CLAIMS RESULTING FROM THE ACTIONS
%OF RECIPIENT IN THE USE OF THE SOFTWARE.
