function [xi,w]=eleventhOrderTriangleCubPoints()
%%ELEVENTHORDERTRIANGLECUBPOINTS Obtain eleventh-order cubature points for
%   integration over a triangle in 2D. The points and weights are for the
%   triangle with vertices (1,0), (0,1), (0,0), but can be transformed to
%   any triangle using transformSimplexTriPoints.
%
%INPUTS: None
%
%OUTPUTS: xi A 2XnumCubPoints set of points for the standard triangle.
%          w A 1XnumCubPoints set of cubature weights. This sums to the
%            volume of the triangle (1/2).
%
%This function implements the points given in [1] (28 points).
%
%EXAMPLE:
%Given the vertices of the simplex, we compare a eleventh-order moment
%computed using these cubature points to one computed using
%monomialIntSimplex. The results are the same within typical finite
%precision limits.
% [xi,w]=eleventhOrderTriangleCubPoints();
% alpha=[6;5];
% theMoment=findMomentFromSamp(alpha,xi,w)
% intVal=monomialIntSimplex(alpha)
%
%REFERENCES:
%[1] F. D. Witherden and P. E. Vincent, "On the identification of symmetric
%    quadrature rules for finite element methods," Computer and Mathematics
%    with Applications, vol. 69, no. 10, pp. 1232-1241, May 2015.
%
%October 2022 David F. Crouse, Naval Research Laboratory, Washington D.C.
%(UNCLASSIFIED) DISTRIBUTION STATEMENT A. Approved for public release.

M=[ -0.33333333333333333333333333333333333333,    -0.33333333333333333333333333333333333333,     0.17152235946444843427639825073065398895;
    -0.94302916477125618104036726638981901865,      0.8860583295425123620807345327796380373,    0.020863741025789391746056984197324633703;
      0.8860583295425123620807345327796380373,    -0.94302916477125618104036726638981901865,    0.020863741025789391746056984197324633703;
    -0.94302916477125618104036726638981901865,    -0.94302916477125618104036726638981901865,    0.020863741025789391746056984197324633703;
    -0.57956008659364348598387546330841477973,     0.15912017318728697196775092661682955946,     0.14103136822343315668414771834585673963;
     0.15912017318728697196775092661682955946,    -0.57956008659364348598387546330841477973,     0.14103136822343315668414771834585673963;
    -0.57956008659364348598387546330841477973,    -0.57956008659364348598387546330841477973,     0.14103136822343315668414771834585673963;
    -0.79472903457550713910176986023011167594,     0.58945806915101427820353972046022335189,    0.077261518474038644953267609178802298293;
     0.58945806915101427820353972046022335189,    -0.79472903457550713910176986023011167594,    0.077261518474038644953267609178802298293;
    -0.79472903457550713910176986023011167594,    -0.79472903457550713910176986023011167594,    0.077261518474038644953267609178802298293;
  -0.0082161980682181738701197619927680147278,    -0.98356760386356365225976047601446397054,     0.03321254610917073915275167855011212173;
    -0.98356760386356365225976047601446397054,  -0.0082161980682181738701197619927680147278,     0.03321254610917073915275167855011212173;
  -0.0082161980682181738701197619927680147278,  -0.0082161980682181738701197619927680147278,     0.03321254610917073915275167855011212173;
    -0.12306814647129561795332827431496109166,    -0.75386370705740876409334345137007781667,     0.13463230815893660239567441124657557177;
    -0.75386370705740876409334345137007781667,    -0.12306814647129561795332827431496109166,     0.13463230815893660239567441124657557177;
    -0.12306814647129561795332827431496109166,    -0.12306814647129561795332827431496109166,     0.13463230815893660239567441124657557177;
    -0.70135042269583522760854842424565295474,     0.68669956732370632439798287279764986108,    0.020580579145906554986161254967959059438;
     0.68669956732370632439798287279764986108,    -0.70135042269583522760854842424565295474,    0.020580579145906554986161254967959059438;
    -0.98534914462787109678943444855199690633,     0.68669956732370632439798287279764986108,    0.020580579145906554986161254967959059438;
     0.68669956732370632439798287279764986108,    -0.98534914462787109678943444855199690633,    0.020580579145906554986161254967959059438;
    -0.98534914462787109678943444855199690633,    -0.70135042269583522760854842424565295474,    0.020580579145906554986161254967959059438;
    -0.70135042269583522760854842424565295474,    -0.98534914462787109678943444855199690633,    0.020580579145906554986161254967959059438;
    -0.90797899966914008822008044741026548976,      0.3288167483937283948070953526650315723,    0.080664953281001105168489835817596259842;
      0.3288167483937283948070953526650315723,    -0.90797899966914008822008044741026548976,    0.080664953281001105168489835817596259842;
    -0.42083774872458830658701490525476608254,      0.3288167483937283948070953526650315723,    0.080664953281001105168489835817596259842;
      0.3288167483937283948070953526650315723,    -0.42083774872458830658701490525476608254,    0.080664953281001105168489835817596259842;
    -0.42083774872458830658701490525476608254,    -0.90797899966914008822008044741026548976,    0.080664953281001105168489835817596259842;
    -0.90797899966914008822008044741026548976,    -0.42083774872458830658701490525476608254,    0.080664953281001105168489835817596259842];

 w=M(:,3);
xi=M(:,1:2)';
%Transform the points to the standard triangle.
v1=[-1,-1, 1;
    -1, 1,-1];
v2=[1,0,0;
    0,1,0];
[A,d]=affineTransBetweenTriangles(v1,v2);
xi=bsxfun(@plus,A*xi,d);
w=w/4;
end

%LICENSE:
%
%The source code is in the public domain and not licensed or under
%copyright. The information and software may be used freely by the public.
%As required by 17 U.S.C. 403, third parties producing copyrighted works
%consisting predominantly of the material produced by U.S. government
%agencies must provide notice with such work(s) identifying the U.S.
%Government material incorporated and stating that such material is not
%subject to copyright protection.
%
%Derived works shall not identify themselves in a manner that implies an
%endorsement by or an affiliation with the Naval Research Laboratory.
%
%RECIPIENT BEARS ALL RISK RELATING TO QUALITY AND PERFORMANCE OF THE
%SOFTWARE AND ANY RELATED MATERIALS, AND AGREES TO INDEMNIFY THE NAVAL
%RESEARCH LABORATORY FOR ALL THIRD-PARTY CLAIMS RESULTING FROM THE ACTIONS
%OF RECIPIENT IN THE USE OF THE SOFTWARE.
