function [xi,w]=fourteenthOrderTriangleCubPoints(algorithm)
%%FOURTEENTHORDERTRIANGLECUBPOINTS Obtain fourteenth-order cubature points
%   for integration over a triangle in 2D. The points and weights are for
%   the triangle with vertices (1,0), (0,1), (0,0), but can be transformed
%   to any triangle using transformSimplexTriPoints.
%
%INPUTS: algorithm An optional parameter selecting the algorithm for the
%                  specific point set. Possible values are:
%                  0 Use the algorithm of [1] (46 points).
%                  1 (The default if omitted or an empty matrix is passed)
%                    Use the 14th order points found using the algorithm of
%                    [2], given in the supplementary material of [2] (42
%                    points).
%
%OUTPUTS: xi A 2XnumCubPoints set of points for the standard triangle.
%          w A 1XnumCubPoints set of cubature weights. This sums to the
%            volume of the triangle (1/2).
%
%This function implements the points given in [1] and [2].
%
%EXAMPLE:
%Given the vertices of the simplex, we compare a fourteenth-order moment
%computed using these cubature points to one computed using
%monomialIntSimplex. The results are the same within typical finite
%precision limits.
% [xi,w]=fourteenthOrderTriangleCubPoints();
% alpha=[9;5];
% theMoment=findMomentFromSamp(alpha,xi,w)
% intVal=monomialIntSimplex(alpha)
%
%REFERENCES:
%[1]L. Zhang and T. Cui, "A set of symmetric quadrature rules on triangles
%   and tetrahedra," Journal of Computational Mathematics, vol. 27, no. 1,
%   pp. 89-96, Jan. 2009.
%[2] F. D. Witherden and P. E. Vincent, "On the identification of symmetric
%    quadrature rules for finite element methods," Computer and Mathematics
%    with Applications, vol. 69, no. 10, pp. 1232-1241, May 2015.
%
%October 2022 David F. Crouse, Naval Research Laboratory, Washington D.C.
%(UNCLASSIFIED) DISTRIBUTION STATEMENT A. Approved for public release.

if(nargin<1||isempty(algorithm))
    algorithm=1;
end

switch(algorithm)
    case 0
        w1=0.0585962852260285941278938063477560;
        w2=0.0017351512297252675680618638808094;
        w3=0.0261637825586145217778288591819783;
        w4=0.0039197292424018290965208275701454;
        w5=0.0122473597569408660972869899262505;
        w6=0.0281996285032579601073663071515657;
        w7=0.0508870871859594852960348275454540;
        w8=0.0504534399016035991910208971341189;
        w9=0.0170636442122334512900253993849472;
        w10=0.0096834664255066004075209630934194;
        w11=0.0363857559284850056220113277642717;
        w12=0.0069646633735184124253997225042413;
        
        w=[w1;
           w2*ones(3,1);
           w3*ones(3,1);
           w4*ones(3,1);
           w5*ones(3,1);
           w6*ones(3,1);
           w7*ones(3,1);
           w8*ones(3,1);
           w9*ones(6,1);
           w10*ones(6,1);
           w11*ones(6,1);
           w12*ones(6,1)];
        
        p1=0.3333333333333333333333333333333333;
        p2=0.0099797608064584324152935295820524;
        p3=0.4799778935211883898105528650883899;
        p4=0.1538119591769669000000000000000000;
        p5=0.0740234771169878100000000000000000;
        p6=0.1303546825033300000000000000000000;
        p7=0.2306172260266531342996053700983831;
        p8=0.4223320834191478241144087137913939;
        p9a=0.7862373859346610033296221140330900;
        p9b=0.1906163600319009042461432828653034;
        p10a=0.6305521436606074416224090755688129;
        p10b=0.3623231377435471446183267343597729;
        p11a=0.6265773298563063142335123137534265;
        p11b=0.2907712058836674150248168174816732;
        p12a=0.9142099849296254122399670993850469;
        p12b=0.0711657108777507625475924502924336;
        
        xiBary=zeros(3,46);
        xiBary(:,1)=p1;
        xiBary(:,2:4)=genAllMultisetPermutations([p2;p2;1-2*p2]);
        xiBary(:,5:7)=genAllMultisetPermutations([p3;p3;1-2*p3]);
        xiBary(:,8:10)=genAllMultisetPermutations([p4;p4;1-2*p4]);
        xiBary(:,11:13)=genAllMultisetPermutations([p5;p5;1-2*p5]);
        xiBary(:,14:16)=genAllMultisetPermutations([p6;p6;1-2*p6]);
        xiBary(:,17:19)=genAllMultisetPermutations([p7;p7;1-2*p7]);
        xiBary(:,20:22)=genAllMultisetPermutations([p8;p8;1-2*p8]);
        
        xiBary(:,23:28)=genAllMultisetPermutations([p9a;p9b;1-p9a-p9b]);
        xiBary(:,29:34)=genAllMultisetPermutations([p10a;p10b;1-p10a-p10b]);
        xiBary(:,35:40)=genAllMultisetPermutations([p11a;p11b;1-p11a-p11b]);
        xiBary(:,41:46)=genAllMultisetPermutations([p12a;p12b;1-p12a-p12b]);
        
        %Adjust w for the triangle area.
        w=w/2;
        
        %Convert the barycentric points into normal cubature points for the
        %specific triangle given the vertices.
        vertices=[1,0,0;
                  0,1,0];
        xi=barycentricCoords2Pt(xiBary,vertices);
    case 1
        M=[-0.64558893517491312608677861906988184783,    0.29117787034982625217355723813976369567,   0.084325177473986035076460874648372259691;
            0.29117787034982625217355723813976369567,   -0.64558893517491312608677861906988184783,   0.084325177473986035076460874648372259691;
           -0.64558893517491312608677861906988184783,   -0.64558893517491312608677861906988184783,   0.084325177473986035076460874648372259691;
           -0.16471056131909215498111835562871312178,   -0.67057887736181569003776328874257375644,   0.065576707088250701282621957477250686472;
           -0.67057887736181569003776328874257375644,   -0.16471056131909215498111835562871312178,   0.065576707088250701282621957477250686472;
           -0.16471056131909215498111835562871312178,   -0.16471056131909215498111835562871312178,   0.065576707088250701282621957477250686472;
           -0.87640023381825479746504234312612842323,    0.75280046763650959493008468625225684647,   0.028867399339553335203419842961306633228;
            0.75280046763650959493008468625225684647,   -0.87640023381825479746504234312612842323,   0.028867399339553335203419842961306633228;
           -0.87640023381825479746504234312612842323,   -0.87640023381825479746504234312612842323,   0.028867399339553335203419842961306633228;
          -0.022072179275642722645247959095219528414,   -0.95585564144871455470950408180956094317,   0.043767162738857781281689891926651943066;
           -0.95585564144871455470950408180956094317,  -0.022072179275642722645247959095219528414,   0.043767162738857781281689891926651943066;
          -0.022072179275642722645247959095219528414,  -0.022072179275642722645247959095219528414,   0.043767162738857781281689891926651943066;
           -0.45304494338232268049011143347460288761,  -0.093910113235354639019777133050794224782,    0.10354820901458317262956982033279280483;
          -0.093910113235354639019777133050794224782,   -0.45304494338232268049011143347460288761,    0.10354820901458317262956982033279280483;
           -0.45304494338232268049011143347460288761,   -0.45304494338232268049011143347460288761,    0.10354820901458317262956982033279280483;
           -0.96121807750259790364349980989094097785,     0.9224361550051958072869996197818819557,   0.009846807204800163363652047018084309531;
             0.9224361550051958072869996197818819557,   -0.96121807750259790364349980989094097785,   0.009846807204800163363652047018084309531;
           -0.96121807750259790364349980989094097785,   -0.96121807750259790364349980989094097785,   0.009846807204800163363652047018084309531;
           -0.40325423572748449405833696388077454282,    0.37396033561617567471725430804062611952,   0.028872616227067680992177383998031606893;
            0.37396033561617567471725430804062611952,   -0.40325423572748449405833696388077454282,   0.028872616227067680992177383998031606893;
           -0.97070609988869118065891734415985157669,    0.37396033561617567471725430804062611952,   0.028872616227067680992177383998031606893;
            0.37396033561617567471725430804062611952,   -0.97070609988869118065891734415985157669,   0.028872616227067680992177383998031606893;
           -0.97070609988869118065891734415985157669,   -0.40325423572748449405833696388077454282,   0.028872616227067680992177383998031606893;
           -0.40325423572748449405833696388077454282,   -0.97070609988869118065891734415985157669,   0.028872616227067680992177383998031606893;
           -0.88575048519270412192864575156217057937,    0.54121710954999296517806654833485591265,   0.049331506425127347925750490367272456636;
            0.54121710954999296517806654833485591265,   -0.88575048519270412192864575156217057937,   0.049331506425127347925750490367272456636;
           -0.65546662435728884324942079677268533329,    0.54121710954999296517806654833485591265,   0.049331506425127347925750490367272456636;
            0.54121710954999296517806654833485591265,   -0.65546662435728884324942079677268533329,   0.049331506425127347925750490367272456636;
           -0.65546662435728884324942079677268533329,   -0.88575048519270412192864575156217057937,   0.049331506425127347925750490367272456636;
           -0.88575048519270412192864575156217057937,   -0.65546662435728884324942079677268533329,   0.049331506425127347925750490367272456636;
           -0.32627708040730999651188960582214922188,    0.14044458169336634699539242672470851928,   0.077143021574121366456978055620821718469;
            0.14044458169336634699539242672470851928,   -0.32627708040730999651188960582214922188,   0.077143021574121366456978055620821718469;
            -0.8141675012860563504835028209025592974,    0.14044458169336634699539242672470851928,   0.077143021574121366456978055620821718469;
            0.14044458169336634699539242672470851928,    -0.8141675012860563504835028209025592974,   0.077143021574121366456978055620821718469;
            -0.8141675012860563504835028209025592974,   -0.32627708040730999651188960582214922188,   0.077143021574121366456978055620821718469;
           -0.32627708040730999651188960582214922188,    -0.8141675012860563504835028209025592974,   0.077143021574121366456978055620821718469;
           -0.99746333813425594982550719780901461465,    0.75951434274034225902914327394920365201,   0.010020457677001343539720186164978232925;
            0.75951434274034225902914327394920365201,   -0.99746333813425594982550719780901461465,   0.010020457677001343539720186164978232925;
           -0.76205100460608630920363607614018903735,    0.75951434274034225902914327394920365201,   0.010020457677001343539720186164978232925;
            0.75951434274034225902914327394920365201,   -0.76205100460608630920363607614018903735,   0.010020457677001343539720186164978232925;
           -0.76205100460608630920363607614018903735,   -0.99746333813425594982550719780901461465,   0.010020457677001343539720186164978232925;
           -0.99746333813425594982550719780901461465,   -0.76205100460608630920363607614018903735,   0.010020457677001343539720186164978232925];
        w=M(:,3);
        xi=M(:,1:2)';
        %Transform the points to the standard triangle.
        v1=[-1,-1, 1;
            -1, 1,-1];
        v2=[1,0,0;
            0,1,0];
        [A,d]=affineTransBetweenTriangles(v1,v2);
        xi=bsxfun(@plus,A*xi,d);
        w=w/4;
    otherwise
        error('Unknown algorithm specified.')
end
end

%LICENSE:
%
%The source code is in the public domain and not licensed or under
%copyright. The information and software may be used freely by the public.
%As required by 17 U.S.C. 403, third parties producing copyrighted works
%consisting predominantly of the material produced by U.S. government
%agencies must provide notice with such work(s) identifying the U.S.
%Government material incorporated and stating that such material is not
%subject to copyright protection.
%
%Derived works shall not identify themselves in a manner that implies an
%endorsement by or an affiliation with the Naval Research Laboratory.
%
%RECIPIENT BEARS ALL RISK RELATING TO QUALITY AND PERFORMANCE OF THE
%SOFTWARE AND ANY RELATED MATERIALS, AND AGREES TO INDEMNIFY THE NAVAL
%RESEARCH LABORATORY FOR ALL THIRD-PARTY CLAIMS RESULTING FROM THE ACTIONS
%OF RECIPIENT IN THE USE OF THE SOFTWARE.
